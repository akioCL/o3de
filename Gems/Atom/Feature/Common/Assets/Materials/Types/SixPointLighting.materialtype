{
    "description": "Material Type with properties used to define Standard PBR, a metallic-roughness Physically-Based Rendering (PBR) material shading model.",
    "version": 1,
    "propertyLayout": {
        "groups": [
            {
                "name": "sixPointLighting",
                "displayName": "Six Point Lighting",
                "description": "Six point lighting settings"
            },
            {
                "name": "baseColor",
                "displayName": "Base Color",
                "description": "Properties for configuring the surface reflected color for dielectrics or reflectance values for metals."
            },
            {
                "name": "metallic",
                "displayName": "Metallic",
                "description": "Properties for configuring whether the surface is metallic or not."
            },
            {
                "name": "roughness",
                "displayName": "Roughness",
                "description": "Properties for configuring how rough the surface appears."
            },
            {
                "name": "specularF0",
                "displayName": "Specular Reflectance f0",
                "description": "The constant f0 represents the specular reflectance at normal incidence (Fresnel 0 Angle). Used to adjust reflectance of non-metal surfaces."
            },
            {
                "name": "opacity",
                "displayName": "Opacity",
                "description": "Properties for configuring the materials transparency."
            },
            {
                "name": "uv",
                "displayName": "UVs",
                "description": "Properties for configuring UV transforms."
            },
            {
                // Note: this property group is used in the DiffuseGlobalIllumination pass, it is not read by the StandardPBR shader
                "name": "irradiance",
                "displayName": "Irradiance",
                "description": "Properties for configuring the irradiance used in global illumination."
            },
            {
                "name": "general",
                "displayName": "General Settings",
                "description": "General settings."
            }
        ],
        "properties": {
            "general": [
                {
                    "name": "doubleSided",
                    "displayName": "Double-sided",
                    "description": "Whether to render back-faces or just front-faces.",
                    "type": "Bool"
                },
                {
                    "name": "applySpecularAA",
                    "displayName": "Apply Specular AA",
                    "description": "Whether to apply specular anti-aliasing in the shader.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_applySpecularAA"
                    }
                },
                {
                    "name": "enableShadows",
                    "displayName": "Enable Shadows",
                    "description": "Whether to use the shadow maps.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_enableShadows"
                    }
                },
                {
                    "name": "enableDirectionalLights",
                    "displayName": "Enable Directional Lights",
                    "description": "Whether to use directional lights.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_enableDirectionalLights"
                    }
                },
                {
                    "name": "enablePunctualLights",
                    "displayName": "Enable Punctual Lights",
                    "description": "Whether to use punctual lights.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_enablePunctualLights"
                    }
                },
                {
                    "name": "enableAreaLights",
                    "displayName": "Enable Area Lights",
                    "description": "Whether to use area lights.",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_enableAreaLights"
                    }
                },
                {
                    "name": "enableIBL",
                    "displayName": "Enable IBL",
                    "description": "Whether to use Image Based Lighting (IBL).",
                    "type": "Bool",
                    "defaultValue": true,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_enableIBL"
                    }
                },
                {
                    "name": "forwardPassIBLSpecular",
                    "displayName": "Forward Pass IBL Specular",
                    "description": "Whether to apply IBL specular in the forward pass.",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_materialUseForwardPassIBLSpecular"
                    }
                }
            ],
            "sixPointLighting": [
                {
                    "name": "TLRB",
                    "displayName": "Top Left Right Bottom",
                    "description": "Top Left Right Bottom Lightmap",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_topLeftRightBottomMap"
                    }
                },
                {
                    "name": "FB",
                    "displayName": "Front Back",
                    "description": "Front Back Lightmap",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_frontBackMap"
                    }
                },
                {
                    "name": "texturePackMode",
                    "displayName": "Texture Pack Mode",
                    "description": "Determins how the textures are sampled.",
                    "type": "Enum",
                    "enumValues": [ "TpLftRtBt_FrBck", "LftRtTp_FrBckBt" ],
                    "defaultValue": "TpLftRtBt_FrBck",
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_sixPointTexutrePackMode"
                    }
                },                
                {
                    "name": "depthMap",
                    "displayName": "Depth",
                    "description": "Depth texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_depthMap"
                    }
                },
                {
                    "name": "useDepthTexture",
                    "displayName": "Use Depth",
                    "description": "Whether to use the depth map.",
                    "type": "Bool",
                    "defaultValue": false
                },
                {
                    "name": "depthScale",
                    "displayName": "Scale the Depth Texture",
                    "description": "Multiplier for the depth texture",
                    "type": "Float",
                    "defaultValue": 10.0,
                    "min": 0.01,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_depthScale"
                    }
                },
                {
                    "name": "rowCount",
                    "displayName": "Rows in Flipbook",
                    "description": "Total rows of animation in the flipbook",
                    "type": "Float",
                    "defaultValue": 8.0,
                    "min": 1.0,
                    "step": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_rowCount"
                    }
                },
                {
                    "name": "columnCount",
                    "displayName": "Columns in Flipbook",
                    "description": "Total columns of animation in the flipbook",
                    "type": "Float",
                    "defaultValue": 8.0,
                    "min": 1.0,
                    "step": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_columnCount"
                    }
                },
                {
                    "name": "enableDebugFrame",
                    "displayName": "Enable debugging a specific frame",
                    "description": "Locks the frame of the animation",
                    "type": "Bool",
                    "defaultValue": false,
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_enableDebugFrame"
                    }
                },
                {
                    "name": "debugFrame",
                    "displayName": "Debug Frame",
                    "description": "The frame you want to debug",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 1.0,
                    "step": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_debugFrame"
                    }
                }
            ],
            "baseColor": [
                {
                    "name": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ],
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_baseColor"
                    }
                },
                {
                    "name": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the base color values. Zero (0.0) is black, white (1.0) is full color.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_baseColorFactor"
                    }
                },
                {
                    "name": "textureMap",
                    "displayName": "Texture",
                    "description": "Base color texture map",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_baseColorMap"
                    }
                },
                {
                    "name": "useTexture",
                    "displayName": "Use Texture",
                    "description": "Whether to use the texture.",
                    "type": "Bool",
                    "defaultValue": true
                },
                {
                    "name": "textureMapUv",
                    "displayName": "UV",
                    "description": "Base color map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_baseColorMapUvIndex"
                    }
                },
                {
                    "name": "textureBlendMode",
                    "displayName": "Texture Blend Mode",
                    "description": "Selects the equation to use when combining Color, Factor, and Texture.",
                    "type": "Enum",
                    "enumValues": [ "Multiply", "LinearLight", "Lerp", "Overlay" ],
                    "defaultValue": "Multiply",
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_baseColorTextureBlendMode"
                    }
                }
            ],
            "metallic": [
                {
                    "name": "factor",
                    "displayName": "Factor",
                    "description": "This value is linear, black is non-metal and white means raw metal.",
                    "type": "Float",
                    "defaultValue": 0.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_metallicFactor"
                    }
                }
            ],
            "roughness": [
                {
                    // Note that "factor" is mutually exclusive with "lowerBound"/"upperBound". These are swapped by a lua functor.
                    "name": "factor",
                    "displayName": "Factor",
                    "description": "Controls the roughness value",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_roughnessFactor"
                    }
                }
            ],
            "specularF0": [
                {
                    "name": "factor",
                    "displayName": "Factor",
                    "description": "The default IOR is 1.5, which gives you 0.04 (4% of light reflected at 0 degree angle for dielectric materials). F0 values lie in the range 0-0.08, so that is why the default F0 slider is set on 0.5.",
                    "type": "Float",
                    "defaultValue": 0.5,
                    "min": 0.0,
                    "max": 1.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_specularF0Factor"
                    }
                },
                // Consider moving this to the "general" group to be consistent with StandardMultilayerPBR
                {
                    "name": "enableMultiScatterCompensation",
                    "displayName": "Multiscattering Compensation",
                    "description": "Whether to enable multiple scattering compensation.",
                    "type": "Bool",
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_specularF0_enableMultiScatterCompensation"
                    }
                }
            ],
            "opacity": [
                {
                    "name": "mode",
                    "displayName": "Opacity Mode",
                    "description": "Indicates the general approach how transparency is to be applied.",
                    "type": "Enum",
                    "enumValues": [ "Opaque", "Cutout", "Blended", "TintedTransparent" ],
                    "defaultValue": "Opaque",
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_opacity_mode"
                    }
                },
                {
                    "name": "alphaSource",
                    "displayName": "Alpha Source",
                    "description": "Indicates whether to get the opacity texture from the Base Color map (Packed) or from a separate greyscale texture (Split).",
                    "type": "Enum",
                    "enumValues": [ "Packed", "Split", "None" ],
                    "defaultValue": "Packed",
                    "connection": {
                        "type": "ShaderOption",
                        "name": "o_opacity_source"
                    }
                },
                {
                    "name": "textureMap",
                    "displayName": "Texture",
                    "description": "Texture for defining surface opacity.",
                    "type": "Image",
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_opacityMap"
                    }
                },
                {
                    "name": "textureMapUv",
                    "displayName": "UV",
                    "description": "Opacity map UV set",
                    "type": "Enum",
                    "enumIsUv": true,
                    "defaultValue": "Tiled",
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_opacityMapUvIndex"
                    }
                },
                {
                    "name": "factor",
                    "displayName": "Factor",
                    "description": "Factor for cutout threshold and blending",
                    "type": "Float",
                    "min": 0.0,
                    "max": 1.0,
                    "defaultValue": 0.5,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_opacityFactor"
                    }
                },
                {
                    "name": "alphaAffectsSpecular",
                    "displayName": "Alpha affects specular",
                    "description": "How much the alpha value should also affect specular reflection. This should be 0.0 for materials where light can transmit through their physical surface (like glass), but 1.0 when alpha determines the very presence of a surface (like hair or grass)",
                    "type": "float",
                    "min": 0.0,
                    "max": 1.0,
                    "defaultValue": 0.0,
                    "connection": {
                        "type": "ShaderInput",
                        "name": "m_opacityAffectsSpecularFactor"
                    }
                }
            ],
            "uv": [
                {
                    "name": "center",
                    "displayName": "Center",
                    "description": "Center point for scaling and rotation transformations.",
                    "type": "vector2",
                    "vectorLabels": [ "U", "V" ],
                    "defaultValue": [ 0.5, 0.5 ]
                },
                {
                    "name": "tileU",
                    "displayName": "Tile U",
                    "description": "Scales texture coordinates in U.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "name": "tileV",
                    "displayName": "Tile V",
                    "description": "Scales texture coordinates in V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                },
                {
                    "name": "offsetU",
                    "displayName": "Offset U",
                    "description": "Offsets texture coordinates in the U direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0
                },
                {
                    "name": "offsetV",
                    "displayName": "Offset V",
                    "description": "Offsets texture coordinates in the V direction.",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -1.0,
                    "max": 1.0
                },
                {
                    "name": "rotateDegrees",
                    "displayName": "Rotate",
                    "description": "Rotates the texture coordinates (degrees).",
                    "type": "float",
                    "defaultValue": 0.0,
                    "min": -180.0,
                    "max": 180.0,
                    "step": 1.0
                },
                {
                    "name": "scale",
                    "displayName": "Scale",
                    "description": "Scales texture coordinates in both U and V.",
                    "type": "float",
                    "defaultValue": 1.0,
                    "step": 0.1
                }
            ],
            "irradiance": [
                // Note: this property group is used in the DiffuseGlobalIllumination pass and not by the main forward shader
                {
                    "name": "color",
                    "displayName": "Color",
                    "description": "Color is displayed as sRGB but the values are stored as linear color.",
                    "type": "Color",
                    "defaultValue": [ 1.0, 1.0, 1.0 ]
                },
                {
                    "name": "factor",
                    "displayName": "Factor",
                    "description": "Strength factor for scaling the irradiance color values. Zero (0.0) is black, white (1.0) is full color.",
                    "type": "Float",
                    "defaultValue": 1.0,
                    "min": 0.0,
                    "max": 1.0
                }
            ]
        }
    },
    "shaders": [
        {
            "file": "./SixPointLighting_ForwardPass.shader",
            "tag": "ForwardPass_EDS"
        },
        {
            "file": "./SixPointLighting_DepthPass_WithPS.shader",
            "tag": "DepthPass_WithPS"
        },
        //{
        //    "file": "./SixPointLighting_MotionVector.shader",
        //    "tag": "MeshMotionVector"
        //},
        // Used by the light culling system to produce accurate depth bounds for this object when it uses blended transparency
        {
            "file": "./SixPointLighting_DepthPassTransparentMin_WithPS.shader",
            "tag": "DepthPassTransparentMin_WithPS"
        },
        {
            "file": "./SixPointLighting_DepthPassTransparentMax_WithPS.shader",
            "tag": "DepthPassTransparentMax_WithPS"
        }        
    ],
    "functors": [
        {
            // Maps 2D scale, offset, and rotate properties into a float3x3 transform matrix.
            "type": "Transform2D",
            "args": {
                "transformOrder": [ "Rotate", "Translate", "Scale" ],
                "centerProperty": "uv.center",
                "scaleProperty": "uv.scale",
                "scaleXProperty": "uv.tileU",
                "scaleYProperty": "uv.tileV",
                "translateXProperty": "uv.offsetU",
                "translateYProperty": "uv.offsetV",
                "rotateDegreesProperty": "uv.rotateDegrees",
                "float3x3ShaderInput": "m_uvMatrix",
                "float3x3InverseShaderInput": "m_uvMatrixInverse"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "sixPointLighting.depthMap",
                "useTextureProperty": "sixPointLighting.useDepthTexture",
                "shaderOption": "o_enableDepthTexture"
            }
        },
        {
            "type": "UseTexture",
            "args": {
                "textureProperty": "baseColor.textureMap",
                "useTextureProperty": "baseColor.useTexture",
                "dependentProperties": ["baseColor.textureMapUv", "baseColor.textureBlendMode"],
                "shaderOption": "o_baseColor_useTexture"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "SixPointLighting_HandleOpacityDoubleSided.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "SixPointLighting_HandleOpacityMode.lua"
            }
        },
        {
            "type": "Lua",
            "args": {
                "file": "SixPointLighting_ShaderEnable.lua"
            }
        }
    ],
    "uvNameMap": {
        "UV0": "Tiled",
        "UV1": "Unwrapped"
    }
}
