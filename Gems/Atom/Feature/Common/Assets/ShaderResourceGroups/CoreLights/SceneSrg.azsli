/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/

#ifndef AZ_COLLECTING_PARTIAL_SRGS
#error Do not include this file directly. Include the main .srgi file instead.
#endif

partial ShaderResourceGroup SceneSrg
{ 
    struct DirectionalLight
    {
        float3 m_direction;
        float m_angularRadius;
        float3 m_rgbIntensityLux;
        float padding2; // explicit padding between float3s, can use this for other data later.
    };

    StructuredBuffer<DirectionalLight> m_directionalLights;
    uint m_directionalLightCount;
    
    // Look up textures for linear transform cosine area lights.
    Texture2D<float4> m_ltcMatrix;
    Texture2D<float2> m_ltcAmplification;
    
    // Hardware PCF comparison sampler that is used when sampling the shadow maps
    SamplerComparisonState m_hwPcfSampler
    {
        MagFilter = Linear;
        MinFilter = Linear;
        MipFilter = Point;
        ComparisonFunc = Less;
        MaxAnisotropy = 16;
        ReductionType = Comparison;
    };    
}